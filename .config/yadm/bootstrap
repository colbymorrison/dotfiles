#! /bin/bash

YADM_CLASSES="$HOME/.config/bootstrap/yadm-classes"
MANAGERS="$HOME/.config/bootstrap/package-manager.json"

function cmd_exists(){
	command -v $1 >/dev/null 2>&1 
}

#
# Usage: install_if_missing [cmd] [pkg_name]
#
function install_if_missing() {
	echo
	PKG=$1
	if [[ $# -ge 2 ]]; then
		PKG=$2
	fi


	if  ! cmd_exists $1; then
		echo "Installing $PKG"
		$INSTALL_CMD $PKG
		if ! cmd_exists $1; then
			echo "Failed to install $1"
			return 1
		fi
	else
		echo "$1 is already installed :)"
	fi
}

# -- Yadm setup --
yadm checkout "$HOME"

if [[ $(yadm config local.class) == "" ]]; then
	echo "Please choose a system type (yadm local.class)"
	YADM_CLASS=$(fzf $YADM_CLASSES)
	yadm config local.class $YADM_CLASS
fi
yadm alt

# -- jq check --
if ! cmd_exists jq; then
	echo "Please install jq (https://stedolan.github.io/jq/download/) and try again"
	exit 1
fi

# -- Detect package manager --
MANAGER=""
for key in $(jq 'keys[]' $MANAGERS); do
	MANAGER=$(echo "$key" | sed s/\"//g)
	cmd_exists $MANAGER && break; 
done

if [[ $MANAGER == "" ]]; then
	echo "Couldn't find the pacakage manager for this system. Please add it to $MANAGERS"
	exit 1
fi

echo "Detected package manager as $MANAGER"

INSTALL_CMD="sudo $MANAGER $(jq .$MANAGER.install $MANAGERS | sed s/\"//g)"
UPDATE_CMD="sudo $MANAGER $(jq .$MANAGER.update $MANAGERS | sed s/\"//g)"

# -- Update --
echo "Performing system update"
$UPDATE_CMD

# -- Bash --
if ! echo $SHELL | grep "bash" > /dev/null 2>&1; then
	echo "Chaging shell to bash"
	chsh -s /bin/bash
fi

# -- Tmux --
install_if_missing tmux

# -- Fzf --
if ! install_if_missing fzf; then
	echo "Please install fzf then try again. See https://github.com/junegunn/fzf#installation"
	exit 1
fi

# -- vim-plug -- 
if [ ! -f ~/.vim/autoload/plug.vim ]; then
	printf "\nInstalling vim-plug"
	curl -fLo ~/.vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
	vim '+PlugInstall' 
fi

# -- Neovim --
install_if_missing nvim neovim


echo "Complete!"
